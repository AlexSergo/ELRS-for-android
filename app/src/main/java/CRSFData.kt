package com.example.myapplication

class CRSFData{
    public val data_array=IntArray(16)
    private val byte_array=UByteArray(26)
    @OptIn(ExperimentalUnsignedTypes::class)
    private val crc_table = ubyteArrayOf(
        0x00u, 0xD5u, 0x7Fu, 0xAAu, 0xFEu, 0x2Bu, 0x81u, 0x54u, 0x29u, 0xFCu, 0x56u, 0x83u, 0xD7u, 0x02u, 0xA8u, 0x7Du,
        0x52u, 0x87u, 0x2Du, 0xF8u, 0xACu, 0x79u, 0xD3u, 0x06u, 0x7Bu, 0xAEu, 0x04u, 0xD1u, 0x85u, 0x50u, 0xFAu, 0x2Fu,
        0xA4u, 0x71u, 0xDBu, 0x0Eu, 0x5Au, 0x8Fu, 0x25u, 0xF0u, 0x8Du, 0x58u, 0xF2u, 0x27u, 0x73u, 0xA6u, 0x0Cu, 0xD9u,
        0xF6u, 0x23u, 0x89u, 0x5Cu, 0x08u, 0xDDu, 0x77u, 0xA2u, 0xDFu, 0x0Au, 0xA0u, 0x75u, 0x21u, 0xF4u, 0x5Eu, 0x8Bu,
        0x9Du, 0x48u, 0xE2u, 0x37u, 0x63u, 0xB6u, 0x1Cu, 0xC9u, 0xB4u, 0x61u, 0xCBu, 0x1Eu, 0x4Au, 0x9Fu, 0x35u, 0xE0u,
        0xCFu, 0x1Au, 0xB0u, 0x65u, 0x31u, 0xE4u, 0x4Eu, 0x9Bu, 0xE6u, 0x33u, 0x99u, 0x4Cu, 0x18u, 0xCDu, 0x67u, 0xB2u,
        0x39u, 0xECu, 0x46u, 0x93u, 0xC7u, 0x12u, 0xB8u, 0x6Du, 0x10u, 0xC5u, 0x6Fu, 0xBAu, 0xEEu, 0x3Bu, 0x91u, 0x44u,
        0x6Bu, 0xBEu, 0x14u, 0xC1u, 0x95u, 0x40u, 0xEAu, 0x3Fu, 0x42u, 0x97u, 0x3Du, 0xE8u, 0xBCu, 0x69u, 0xC3u, 0x16u,
        0xEFu, 0x3Au, 0x90u, 0x45u, 0x11u, 0xC4u, 0x6Eu, 0xBBu, 0xC6u, 0x13u, 0xB9u, 0x6Cu, 0x38u, 0xEDu, 0x47u, 0x92u,
        0xBDu, 0x68u, 0xC2u, 0x17u, 0x43u, 0x96u, 0x3Cu, 0xE9u, 0x94u, 0x41u, 0xEBu, 0x3Eu, 0x6Au, 0xBFu, 0x15u, 0xC0u,
        0x4Bu, 0x9Eu, 0x34u, 0xE1u, 0xB5u, 0x60u, 0xCAu, 0x1Fu, 0x62u, 0xB7u, 0x1Du, 0xC8u, 0x9Cu, 0x49u, 0xE3u, 0x36u,
        0x19u, 0xCCu, 0x66u, 0xB3u, 0xE7u, 0x32u, 0x98u, 0x4Du, 0x30u, 0xE5u, 0x4Fu, 0x9Au, 0xCEu, 0x1Bu, 0xB1u, 0x64u,
        0x72u, 0xA7u, 0x0Du, 0xD8u, 0x8Cu, 0x59u, 0xF3u, 0x26u, 0x5Bu, 0x8Eu, 0x24u, 0xF1u, 0xA5u, 0x70u, 0xDAu, 0x0Fu,
        0x20u, 0xF5u, 0x5Fu, 0x8Au, 0xDEu, 0x0Bu, 0xA1u, 0x74u, 0x09u, 0xDCu, 0x76u, 0xA3u, 0xF7u, 0x22u, 0x88u, 0x5Du,
        0xD6u, 0x03u, 0xA9u, 0x7Cu, 0x28u, 0xFDu, 0x57u, 0x82u, 0xFFu, 0x2Au, 0x80u, 0x55u, 0x01u, 0xD4u, 0x7Eu, 0xABu,
        0x84u, 0x51u, 0xFBu, 0x2Eu, 0x7Au, 0xAFu, 0x05u, 0xD0u, 0xADu, 0x78u, 0xD2u, 0x07u, 0x53u, 0x86u, 0x2Cu, 0xF9u
    )

    @OptIn(ExperimentalUnsignedTypes::class)
    fun crsf_crc8(arr:UByteArray):UByte{
        var crc:UByte= 0u;
        for(i in arr){
            crc=crc_table[(crc xor i).toInt() ]
        }
        return crc
    }
    @OptIn(ExperimentalUnsignedTypes::class)
    fun pack():UByteArray{
        var startBitIndex=0
        var cnt=3
        byte_array[0]=0xc8u
        byte_array[1]=0x18u
        byte_array[2]=0x16u

        var nowPackByte:Int = 0

        for(i in data_array){
            var tempData=i
            var bits=11
            while(bits!=0){
                val data1 =  tempData and ((1 shl (8-startBitIndex) ) -1)
                val packNum = Math.min(bits, 8 - startBitIndex)

                bits -= packNum

                nowPackByte = nowPackByte.or((data1 shl startBitIndex))
                startBitIndex = startBitIndex + packNum
                tempData = tempData shr(packNum)
                if(startBitIndex == 8){
                    //byte_array.add(nowPackByte.toByte())
                    byte_array[cnt]=nowPackByte.toUByte()
                    startBitIndex = 0
                    nowPackByte = 0
                    cnt++
                }
            }
        }
        byte_array[25]=crsf_crc8(byte_array.slice(2 .. 24).toUByteArray())
        return byte_array
    }

    @OptIn(ExperimentalUnsignedTypes::class)
    fun packCmd(command:UByte,value:UByte):UByteArray{
        byte_array[0]=0xEEu   //ELRS_ADDRESS
        byte_array[1]=6u
        byte_array[2]=0x2Du   //TYPE_SETTINGS_WRITE
        byte_array[3]=0xEEu
        byte_array[4]=0xEAu //  Radio Transmitter
        byte_array[5]=command
        byte_array[6]=value

        byte_array[7]=crsf_crc8(byte_array.slice(2 ..  6).toUByteArray())

        return byte_array
    }
}